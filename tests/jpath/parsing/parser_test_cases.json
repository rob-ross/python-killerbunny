{
    "description": "Parser tests of example paths in RFC 9535 tables 2-18. This file is autogenerated, do not edit.",
    "tests": [
        {
            "test_name": "table_02-$.store.book[*].author",
            "json_path": "$.store.book[*].author",
            "parser_ast": "${CS{bs[ns:store]/bs}/CS, CS{bs[ns:book]/bs}/CS, CS{bs[*]/bs}/CS, CS{bs[ns:author]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..author",
            "json_path": "$..author",
            "parser_ast": "${DS{bs[ns:author]/bs}/DS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$.store.*",
            "json_path": "$.store.*",
            "parser_ast": "${CS{bs[ns:store]/bs}/CS, CS{bs[*]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$.store..price",
            "json_path": "$.store..price",
            "parser_ast": "${CS{bs[ns:store]/bs}/CS, DS{bs[ns:price]/bs}/DS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[2]",
            "json_path": "$..book[2]",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[is:2]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[2].author",
            "json_path": "$..book[2].author",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[is:2]/bs}/CS, CS{bs[ns:author]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[2].publisher",
            "json_path": "$..book[2].publisher",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[is:2]/bs}/CS, CS{bs[ns:publisher]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[-1]",
            "json_path": "$..book[-1]",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[is:-1]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[0,1]",
            "json_path": "$..book[0,1]",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[is:0, is:1]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[:2]",
            "json_path": "$..book[:2]",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[slice(:2:)]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[?@.isbn]",
            "json_path": "$..book[?@.isbn]",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[fs{?@ segments<CS{bs[ns:isbn]/bs}/CS>}/fs]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..book[?@.price<10]",
            "json_path": "$..book[?@.price<10]",
            "parser_ast": "${DS{bs[ns:book]/bs}/DS, CS{bs[fs{?comp_expr(@{sqs{ns:price}}/@, <, 10)}/fs]/bs}/CS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_02-$..*",
            "json_path": "$..*",
            "parser_ast": "${DS{bs[*]/bs}/DS}/$",
            "source_file_name": "table_02",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_03-$",
            "json_path": "$",
            "parser_ast": "$",
            "source_file_name": "table_03",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_05-$.o['j j']",
            "json_path": "$.o['j j']",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[ns:j j]/bs}/CS}/$",
            "source_file_name": "table_05",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_05-$.o['j j']['k.k']",
            "json_path": "$.o['j j']['k.k']",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[ns:j j]/bs}/CS, CS{bs[ns:k.k]/bs}/CS}/$",
            "source_file_name": "table_05",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_05-$.o[\"j j\"][\"k.k\"]",
            "json_path": "$.o[\"j j\"][\"k.k\"]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[ns:j j]/bs}/CS, CS{bs[ns:k.k]/bs}/CS}/$",
            "source_file_name": "table_05",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_05-$['o']['j j']['k.k']",
            "json_path": "$['o']['j j']['k.k']",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[ns:j j]/bs}/CS, CS{bs[ns:k.k]/bs}/CS}/$",
            "source_file_name": "table_05",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_05-$[\"'\"][\"@\"]",
            "json_path": "$[\"'\"][\"@\"]",
            "parser_ast": "${CS{bs[ns:']/bs}/CS, CS{bs[ns:@]/bs}/CS}/$",
            "source_file_name": "table_05",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_06-$[*]",
            "json_path": "$[*]",
            "parser_ast": "${CS{bs[*]/bs}/CS}/$",
            "source_file_name": "table_06",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_06-$.o[*]",
            "json_path": "$.o[*]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[*]/bs}/CS}/$",
            "source_file_name": "table_06",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_06-$.o[*]",
            "json_path": "$.o[*]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[*]/bs}/CS}/$",
            "source_file_name": "table_06",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_06-$.o[*, *]",
            "json_path": "$.o[*, *]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[*, *]/bs}/CS}/$",
            "source_file_name": "table_06",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_06-$.a[*]",
            "json_path": "$.a[*]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[*]/bs}/CS}/$",
            "source_file_name": "table_06",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_07-$[1]",
            "json_path": "$[1]",
            "parser_ast": "${CS{bs[is:1]/bs}/CS}/$",
            "source_file_name": "table_07",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_07-$[-2]",
            "json_path": "$[-2]",
            "parser_ast": "${CS{bs[is:-2]/bs}/CS}/$",
            "source_file_name": "table_07",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_09-$[1:3]",
            "json_path": "$[1:3]",
            "parser_ast": "${CS{bs[slice(1:3:)]/bs}/CS}/$",
            "source_file_name": "table_09",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_09-$[5:]",
            "json_path": "$[5:]",
            "parser_ast": "${CS{bs[slice(5::)]/bs}/CS}/$",
            "source_file_name": "table_09",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_09-$[1:5:2]",
            "json_path": "$[1:5:2]",
            "parser_ast": "${CS{bs[slice(1:5:2)]/bs}/CS}/$",
            "source_file_name": "table_09",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_09-$[5:1:-2]",
            "json_path": "$[5:1:-2]",
            "parser_ast": "${CS{bs[slice(5:1:-2)]/bs}/CS}/$",
            "source_file_name": "table_09",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_09-$[::-1]",
            "json_path": "$[::-1]",
            "parser_ast": "${CS{bs[slice(::-1)]/bs}/CS}/$",
            "source_file_name": "table_09",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.absent1 == $.absent2",
            "json_path": "$.absent1 == $.absent2",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got == at position 11: $.absent1 ^==^ $.absent2",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.absent1 <= $.absent2",
            "json_path": "$.absent1 <= $.absent2",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got <= at position 11: $.absent1 ^<=^ $.absent2",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.absent == 'g'",
            "json_path": "$.absent == 'g'",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got == at position 10: $.absent ^==^ 'g'",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.absent1 != $.absent2",
            "json_path": "$.absent1 != $.absent2",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got != at position 11: $.absent1 ^!=^ $.absent2",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.absent != 'g'",
            "json_path": "$.absent != 'g'",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got != at position 10: $.absent ^!=^ 'g'",
            "subparse_production": null
        },
        {
            "test_name": "table_11-1 <= 2",
            "json_path": "1 <= 2",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got INT at position 1: ^1^ <= 2",
            "subparse_production": null
        },
        {
            "test_name": "table_11-1> 2",
            "json_path": "1> 2",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got INT at position 1: ^1^> 2",
            "subparse_production": null
        },
        {
            "test_name": "table_11-13 == '13'",
            "json_path": "13 == '13'",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got INT at position 1: ^13^ == '13'",
            "subparse_production": null
        },
        {
            "test_name": "table_11-'a' <= 'b'",
            "json_path": "'a' <= 'b'",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got STRING at position 1: ^'a'^ <= 'b'",
            "subparse_production": null
        },
        {
            "test_name": "table_11-'a' > 'b'",
            "json_path": "'a' > 'b'",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got STRING at position 1: ^'a'^ > 'b'",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj == $.arr",
            "json_path": "$.obj == $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got == at position 7: $.obj ^==^ $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj != $.arr",
            "json_path": "$.obj != $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got != at position 7: $.obj ^!=^ $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj == $.obj",
            "json_path": "$.obj == $.obj",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got == at position 7: $.obj ^==^ $.obj",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj != $.obj",
            "json_path": "$.obj != $.obj",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got != at position 7: $.obj ^!=^ $.obj",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.arr == $.arr",
            "json_path": "$.arr == $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got == at position 7: $.arr ^==^ $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.arr != $.arr",
            "json_path": "$.arr != $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got != at position 7: $.arr ^!=^ $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj == 17",
            "json_path": "$.obj == 17",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got == at position 7: $.obj ^==^ 17",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj != 17",
            "json_path": "$.obj != 17",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got != at position 7: $.obj ^!=^ 17",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj <= $.arr",
            "json_path": "$.obj <= $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got <= at position 7: $.obj ^<=^ $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj < $.arr",
            "json_path": "$.obj < $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got < at position 7: $.obj ^<^ $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.obj <= $.obj",
            "json_path": "$.obj <= $.obj",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got <= at position 7: $.obj ^<=^ $.obj",
            "subparse_production": null
        },
        {
            "test_name": "table_11-$.arr <= $.arr",
            "json_path": "$.arr <= $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Parser completed before EOF. Expected '.', '[' or '..', got <= at position 7: $.arr ^<=^ $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-1 <= $.arr",
            "json_path": "1 <= $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got INT at position 1: ^1^ <= $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-1 >= $.arr",
            "json_path": "1 >= $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got INT at position 1: ^1^ >= $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-1 > $.arr",
            "json_path": "1 > $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got INT at position 1: ^1^ > $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-1 < $.arr",
            "json_path": "1 < $.arr",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got INT at position 1: ^1^ < $.arr",
            "subparse_production": null
        },
        {
            "test_name": "table_11-true <= true",
            "json_path": "true <= true",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got true at position 1: ^true^ <= true",
            "subparse_production": null
        },
        {
            "test_name": "table_11-true > true",
            "json_path": "true > true",
            "parser_ast": "",
            "source_file_name": "table_11",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: start: Expected '$', got true at position 1: ^true^ > true",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?@.b == 'kilo']",
            "json_path": "$.a[?@.b == 'kilo']",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?comp_expr(@{sqs{ns:b}}/@, ==, kilo)}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?(@.b == 'kilo')]",
            "json_path": "$.a[?(@.b == 'kilo')]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?comp_expr(@{sqs{ns:b}}/@, ==, kilo)}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?@>3.5]",
            "json_path": "$.a[?@>3.5]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?comp_expr(@, >, 3.5)}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?@.b]",
            "json_path": "$.a[?@.b]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?@ segments<CS{bs[ns:b]/bs}/CS>}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$[?@.*]",
            "json_path": "$[?@.*]",
            "parser_ast": "${CS{bs[fs{?@ segments<CS{bs[*]/bs}/CS>}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$[?@[?@.b]]",
            "json_path": "$[?@[?@.b]]",
            "parser_ast": "${CS{bs[fs{?@ segments<CS{bs[fs{?@ segments<CS{bs[ns:b]/bs}/CS>}/fs]/bs}/CS>}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.o[?@<3, ?@<3]",
            "json_path": "$.o[?@<3, ?@<3]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[fs{?comp_expr(@, <, 3)}/fs, fs{?comp_expr(@, <, 3)}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?@<2 || @.b == \"k\"]",
            "json_path": "$.a[?@<2 || @.b == \"k\"]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?logical_or_expr[comp_expr(@, <, 2), comp_expr(@{sqs{ns:b}}/@, ==, k)]/logical_or_expr}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?match(@.b, \"[jk]\")]",
            "json_path": "$.a[?match(@.b, \"[jk]\")]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?match(@ segments<CS{bs[ns:b]/bs}/CS>, [jk])->LogicalType}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?search(@.b, \"[jk]\")]",
            "json_path": "$.a[?search(@.b, \"[jk]\")]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?search(@ segments<CS{bs[ns:b]/bs}/CS>, [jk])->LogicalType}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.o[?@>1 && @<4]",
            "json_path": "$.o[?@>1 && @<4]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[fs{?logical_and_expr[comp_expr(@, >, 1), comp_expr(@, <, 4)]/logical_and_expr}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.o[?@>1 && @<4]",
            "json_path": "$.o[?@>1 && @<4]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[fs{?logical_and_expr[comp_expr(@, >, 1), comp_expr(@, <, 4)]/logical_and_expr}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.o[?@.u ||  @.x]",
            "json_path": "$.o[?@.u ||  @.x]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, CS{bs[fs{?logical_or_expr[@ segments<CS{bs[ns:u]/bs}/CS>, @ segments<CS{bs[ns:x]/bs}/CS>]/logical_or_expr}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?@.b == $.x]",
            "json_path": "$.a[?@.b == $.x]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?comp_expr(@{sqs{ns:b}}/@, ==, ${sqs{ns:x}}/$)}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_12-$.a[?@ == @]",
            "json_path": "$.a[?@ == @]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[fs{?comp_expr(@, ==, @)}/fs]/bs}/CS}/$",
            "source_file_name": "table_12",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?length(@) < 3]",
            "json_path": "$[?length(@) < 3]",
            "parser_ast": "${CS{bs[fs{?comp_expr(length(@)->ValueType, <, 3)}/fs]/bs}/CS}/$",
            "source_file_name": "table_14",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?length(@.*) < 3]",
            "json_path": "$[?length(@.*) < 3]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Validation Error: function_expr: Expected singular query for ValueType parameter at position 11: $[?length(^@.*^) < 3]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?count(@.*) == 1]",
            "json_path": "$[?count(@.*) == 1]",
            "parser_ast": "${CS{bs[fs{?comp_expr(count(@ segments<CS{bs[*]/bs}/CS>)->ValueType, ==, 1)}/fs]/bs}/CS}/$",
            "source_file_name": "table_14",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?count(1) == 1]",
            "json_path": "$[?count(1) == 1]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Validation Error: function_expr: Expected NodesType but got ValueType at position 10: $[?count(^1^) == 1]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?count(foo(@.*)) == 1]",
            "json_path": "$[?count(foo(@.*)) == 1]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Illegal Function Name: function_expr: Function name 'foo' is not registered at position 10: $[?count(^foo^(@.*)) == 1]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?match(@.timezone, 'Europe/.*')]",
            "json_path": "$[?match(@.timezone, 'Europe/.*')]",
            "parser_ast": "${CS{bs[fs{?match(@ segments<CS{bs[ns:timezone]/bs}/CS>, Europe/.*)->LogicalType}/fs]/bs}/CS}/$",
            "source_file_name": "table_14",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?match(@.timezone,'Europe/.*') == true]",
            "json_path": "$[?match(@.timezone,'Europe/.*') == true]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Invalid Syntax: bracketed_selection: Expected ',' or ']', found == at position 34: $[?match(@.timezone,'Europe/.*') ^==^ true]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?value(@..color) == \"red\"]",
            "json_path": "$[?value(@..color) == \"red\"]",
            "parser_ast": "${CS{bs[fs{?comp_expr(value(@ segments<DS{bs[ns:color]/bs}/DS>)->ValueType, ==, red)}/fs]/bs}/CS}/$",
            "source_file_name": "table_14",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?value(@..color)]",
            "json_path": "$[?value(@..color)]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Validation Error: test_expr: Function not well-typed for test_expr. Expected LogicalType or NodesType, got ValueType at position 4: $[?^value(@..color)^]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?bar(@.a)]",
            "json_path": "$[?bar(@.a)]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Illegal Function Name: function_expr: Function name 'bar' is not registered at position 4: $[?^bar^(@.a)]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?bnl(@.*)]",
            "json_path": "$[?bnl(@.*)]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Illegal Function Name: function_expr: Function name 'bnl' is not registered at position 4: $[?^bnl^(@.*)]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?blt(1==1)]",
            "json_path": "$[?blt(1==1)]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Illegal Function Name: function_expr: Function name 'blt' is not registered at position 4: $[?^blt^(1==1)]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?blt(1)]",
            "json_path": "$[?blt(1)]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Illegal Function Name: function_expr: Function name 'blt' is not registered at position 4: $[?^blt^(1)]",
            "subparse_production": null
        },
        {
            "test_name": "table_14-$[?bal(1)]",
            "json_path": "$[?bal(1)]",
            "parser_ast": "",
            "source_file_name": "table_14",
            "is_invalid": true,
            "err_msg": "Illegal Function Name: function_expr: Function name 'bal' is not registered at position 4: $[?^bal^(1)]",
            "subparse_production": null
        },
        {
            "test_name": "table_15-$[0, 3]",
            "json_path": "$[0, 3]",
            "parser_ast": "${CS{bs[is:0, is:3]/bs}/CS}/$",
            "source_file_name": "table_15",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_15-$[0:2, 5]",
            "json_path": "$[0:2, 5]",
            "parser_ast": "${CS{bs[slice(0:2:), is:5]/bs}/CS}/$",
            "source_file_name": "table_15",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_15-$[0, 0]",
            "json_path": "$[0, 0]",
            "parser_ast": "${CS{bs[is:0, is:0]/bs}/CS}/$",
            "source_file_name": "table_15",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$..j",
            "json_path": "$..j",
            "parser_ast": "${DS{bs[ns:j]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$..j",
            "json_path": "$..j",
            "parser_ast": "${DS{bs[ns:j]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$..[0]",
            "json_path": "$..[0]",
            "parser_ast": "${DS{bs[is:0]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$..[*]",
            "json_path": "$..[*]",
            "parser_ast": "${DS{bs[*]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$..*",
            "json_path": "$..*",
            "parser_ast": "${DS{bs[*]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$..o",
            "json_path": "$..o",
            "parser_ast": "${DS{bs[ns:o]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$.o..[*, *]",
            "json_path": "$.o..[*, *]",
            "parser_ast": "${CS{bs[ns:o]/bs}/CS, DS{bs[*, *]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_16-$.a..[0, 1]",
            "json_path": "$.a..[0, 1]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, DS{bs[is:0, is:1]/bs}/DS}/$",
            "source_file_name": "table_16",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.a",
            "json_path": "$.a",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.a[0]",
            "json_path": "$.a[0]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[is:0]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.a.d",
            "json_path": "$.a.d",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[ns:d]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.b[0]",
            "json_path": "$.b[0]",
            "parser_ast": "${CS{bs[ns:b]/bs}/CS, CS{bs[is:0]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.b[*]",
            "json_path": "$.b[*]",
            "parser_ast": "${CS{bs[ns:b]/bs}/CS, CS{bs[*]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.b[?@]",
            "json_path": "$.b[?@]",
            "parser_ast": "${CS{bs[ns:b]/bs}/CS, CS{bs[fs{?@}/fs]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.b[?@==null]",
            "json_path": "$.b[?@==null]",
            "parser_ast": "${CS{bs[ns:b]/bs}/CS, CS{bs[fs{?comp_expr(@, ==, null)}/fs]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.c[?@.d==null]",
            "json_path": "$.c[?@.d==null]",
            "parser_ast": "${CS{bs[ns:c]/bs}/CS, CS{bs[fs{?comp_expr(@{sqs{ns:d}}/@, ==, null)}/fs]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_17-$.null",
            "json_path": "$.null",
            "parser_ast": "${CS{bs[ns:null]/bs}/CS}/$",
            "source_file_name": "table_17",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_18-$.a",
            "json_path": "$.a",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS}/$",
            "source_file_name": "table_18",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_18-$[1]",
            "json_path": "$[1]",
            "parser_ast": "${CS{bs[is:1]/bs}/CS}/$",
            "source_file_name": "table_18",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_18-$[-3]",
            "json_path": "$[-3]",
            "parser_ast": "${CS{bs[is:-3]/bs}/CS}/$",
            "source_file_name": "table_18",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_18-$.a.b[1:2]",
            "json_path": "$.a.b[1:2]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS, CS{bs[ns:b]/bs}/CS, CS{bs[slice(1:2:)]/bs}/CS}/$",
            "source_file_name": "table_18",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_18-$[\"\\u000B\"]",
            "json_path": "$[\"\\u000B\"]",
            "parser_ast": "${CS{bs[ns:\u000b]/bs}/CS}/$",
            "source_file_name": "table_18",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        },
        {
            "test_name": "table_18-$[\"\\u0061\"]",
            "json_path": "$[\"\\u0061\"]",
            "parser_ast": "${CS{bs[ns:a]/bs}/CS}/$",
            "source_file_name": "table_18",
            "is_invalid": false,
            "err_msg": "",
            "subparse_production": null
        }
    ]
}